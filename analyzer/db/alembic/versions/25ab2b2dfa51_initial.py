"""Initial

Revision ID: 25ab2b2dfa51
Revises: 
Create Date: 2024-02-04 15:49:32.897476

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


Gender = sa.Enum('male', 'female', name='gender')

# revision identifiers, used by Alembic.
revision: str = '25ab2b2dfa51'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('import',
    sa.Column('import_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('import_id', name=op.f('pk__import'))
    )
    op.create_table('citizen',
    sa.Column('import_id', sa.Integer(), nullable=False),
    sa.Column('citizen_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender', Gender, nullable=False),
    sa.Column('town', sa.String(), nullable=False),
    sa.Column('street', sa.String(), nullable=False),
    sa.Column('building', sa.String(), nullable=False),
    sa.Column('apartment', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['import_id'], ['import.import_id'], name=op.f('fk__citizen_import_id_import')),
    sa.PrimaryKeyConstraint('import_id', 'citizen_id', name=op.f('pk__citizen'))
    )
    op.create_index(op.f('ix__citizen_town'), 'citizen', ['town'], unique=False)
    op.create_table('relation',
    sa.Column('import_id', sa.Integer(), nullable=False),
    sa.Column('citizen_id', sa.Integer(), nullable=False),
    sa.Column('relative_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['import_id', 'citizen_id'], ['citizen.import_id', 'citizen.citizen_id'], name=op.f('fk__relation_import_id_citizen_id_citizen')),
    sa.ForeignKeyConstraint(['import_id', 'relative_id'], ['citizen.import_id', 'citizen.citizen_id'], name=op.f('fk__relation_import_id_relative_id_citizen')),
    sa.PrimaryKeyConstraint('import_id', 'citizen_id', 'relative_id', name=op.f('pk__relation'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('relation')
    op.drop_index(op.f('ix__citizen_town'), table_name='citizen')
    op.drop_table('citizen')
    op.drop_table('import')
    Gender.drop(op.get_bind())
    # ### end Alembic commands ###
